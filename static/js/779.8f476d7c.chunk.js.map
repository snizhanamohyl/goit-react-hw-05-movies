{"version":3,"file":"static/js/779.8f476d7c.chunk.js","mappings":"8QAEaA,EAAcC,EAAAA,GAAAA,GAAH,4DAKXC,EAAkBD,EAAAA,GAAAA,GAAH,iPAafE,EAAOF,EAAAA,GAAAA,EAAH,6C,SCdF,SAASG,IACpB,OAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,EAAU,mCAAG,WAAOF,GAAP,0EACVA,EADU,2EAIWG,EAAAA,EAAAA,IAAiBH,GAJ5B,OAILF,EAJK,OAKXC,EAAWD,GALA,gDAOXM,QAAQC,IAAR,MAPW,yDAAH,uDAWhBC,EAAAA,EAAAA,YAAU,WACNJ,EAAWF,EACd,GAAE,CAACA,IAEJ,IAAMO,EAAaT,GAA8B,IAAnBA,EAAQU,OAEtC,OAAO,SAAC,EAAAC,SAAD,WACH,SAACjB,EAAD,UACKe,EAAYT,EAAQY,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OAA6B,UAACnB,EAAD,YAClD,UAACC,EAAD,oBAAagB,MACb,uBAAIC,MAFoEC,EAAnD,KAGH,uEAGjC,C,+LClCKC,EAAM,mCACNC,EAAW,gCAEV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,sCACoBD,IAFtC,cACCI,EADD,yBAKEA,EAASC,KAAKC,SALhB,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,uFACkBL,EAAAA,EAAAA,IAAA,UAClBF,EADkB,gCACcD,EADd,kBAC2BQ,IAF7C,cACCJ,EADD,yBAKEA,EAASC,KAAKC,SALhB,kEAQA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA8BV,GAA9B,uFACkBI,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA8BF,EAA9B,oBAA4CC,IAD9D,cACCI,EADD,yBAGEA,EAASC,MAHX,kEAMA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAgCX,GAAhC,uFACkBI,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDF,EADC,4BACqBC,IAFvC,cACCI,EADD,yBAKEA,EAASC,KAAKM,MALhB,kEAQA,SAAetB,EAAtB,+CAAO,OAAP,oBAAO,WAAgCU,GAAhC,uFACkBI,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDF,EADC,4BACqBC,IAFvC,cACCI,EADD,yBAKEA,EAASC,KAAKC,SALhB,kE","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsList = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n\nexport const ReviewsListItem = styled.li`\n  list-style: none;\n  margin: 0;\n  border: 1px solid #e8e8e8;\n  /* box-shadow: 0px 0px 4px #e8e8e8; */\n  padding: 12px 20px;\n  border-radius: 12px 0 0 0;\n\n  &:not(:last-child) {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const User = styled.p`\n  font-weight: 500;\n`;\n","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\"\nimport { fetchReviewsById } from \"services/api\";\nimport { ReviewsList, ReviewsListItem, User } from \"./Reviews.styled\";\nimport { Suspense } from \"react\";\n\nexport default function Reviews() {\n    const [reviews, setReviews] = useState(null);\n\n    const { movieId } = useParams();\n    \n    const getReviews = async (movieId) => {\n        if (!movieId) return;\n\n        try { \n            const reviews = await fetchReviewsById(movieId);\n            setReviews(reviews);\n        } catch (error) {\n            console.log(error)\n        }\n    } \n\n    useEffect(() => {\n        getReviews(movieId)\n    }, [movieId])\n\n    const isReviews = (reviews && reviews.length !== 0);\n\n    return <Suspense>\n        <ReviewsList>\n            {isReviews ? reviews.map(({ author, content, id }) => <ReviewsListItem key={id}>\n                <User>User: {author}</User>\n                <p>{content}</p>\n            </ReviewsListItem>) : <p>We don't have any reviews for this movie</p>} \n        </ReviewsList>\n    </Suspense>\n}","import axios from 'axios';\n\nconst KEY = '39333c238f3beb7b012a47ab928bbaed';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchTrendingMovies() {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${KEY}`\n  );\n\n  return response.data.results;\n}\n\nexport async function fetchMovieByQuery(query) {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${KEY}&query=${query}`\n  );\n\n  return response.data.results;\n}\n\nexport async function fetchMovieById(id) {\n  const response = await axios.get(`${BASE_URL}movie/${id}?api_key=${KEY}`);\n\n  return response.data;\n}\n\nexport async function fetchCreditsById(id) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${KEY}`\n  );\n\n  return response.data.cast;\n}\n\nexport async function fetchReviewsById(id) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${KEY}`\n  );\n\n  return response.data.results;\n}\n"],"names":["ReviewsList","styled","ReviewsListItem","User","Reviews","useState","reviews","setReviews","movieId","useParams","getReviews","fetchReviewsById","console","log","useEffect","isReviews","length","Suspense","map","author","content","id","KEY","BASE_URL","fetchTrendingMovies","axios","response","data","results","fetchMovieByQuery","query","fetchMovieById","fetchCreditsById","cast"],"sourceRoot":""}