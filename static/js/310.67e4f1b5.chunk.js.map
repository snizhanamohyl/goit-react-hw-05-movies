{"version":3,"file":"static/js/310.67e4f1b5.chunk.js","mappings":"oMAGe,SAASA,EAAT,GAAgC,IAAXC,EAAU,EAAVA,OAC1BC,GAAWC,EAAAA,EAAAA,MAEjB,OAAO,wBAAKF,EAAOG,KAAI,SAAAC,GAAK,OAAI,yBAAmB,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAON,EAAxC,SAAmDG,EAAMI,SAAnEJ,EAAME,GAAnB,KAC/B,C,sKCLYG,EAAOC,EAAAA,GAAAA,KAAH,kFAMJC,EAAQD,EAAAA,GAAAA,MAAH,8HAOLE,EAAMF,EAAAA,GAAAA,OAAH,wK,SCPD,SAASG,IAAU,IAAD,EAC7B,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,MAArC,eAAOd,EAAP,KAAeiB,EAAf,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAU,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAoChD,OAbAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAgB,mCAAG,8GAEIC,EAAAA,EAAAA,IAAkBJ,GAFtB,OAEXrB,EAFW,OAGjBiB,EAAUjB,GAHO,gDAKjB0B,QAAQC,IAAR,MALiB,yDAAH,qDAStBH,GACH,GAAC,CAACH,KAEI,UAAC,EAAAO,SAAD,CAAUC,UAAU,uCAApB,WACH,UAACpB,EAAD,CAAMqB,SAzBO,SAACC,GATQ,IAACC,GAUvBD,EAAEE,iBACGlB,IATLK,EAD6B,MADNY,EAgBLjB,GAfgB,CAAEiB,MAAAA,GAAU,CAAC,GAgB/ChB,EAAc,KALVkB,MAAM,6CAMb,EAgBG,WACI,SAACvB,EAAD,CAAOwB,KAAK,OAAOC,MAAOrB,EAAYsB,SA9B7B,SAACN,GACdf,EAAce,EAAEO,OAAOF,MAC1B,KA6BO,SAACxB,EAAD,CAAKuB,KAAK,SAAV,uBAEQ,OAAXnC,GAAsC,IAAlBA,EAAOuC,SAAiB,SAACxC,EAAA,EAAD,CAAWC,OAAQA,MAEvE,C,+LCtDKwC,EAAM,mCACNC,EAAW,gCAEV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,sCACoBD,IAFtC,cACCI,EADD,yBAKEA,EAASC,KAAKC,SALhB,kEAQA,SAAerB,EAAtB,+CAAO,OAAP,oBAAO,WAAiCO,GAAjC,uFACkBW,EAAAA,EAAAA,IAAA,UAClBF,EADkB,gCACcD,EADd,kBAC2BR,IAF7C,cACCY,EADD,yBAKEA,EAASC,KAAKC,SALhB,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BzC,GAA9B,uFACkBqC,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA8BnC,EAA9B,oBAA4CkC,IAD9D,cACCI,EADD,yBAGEA,EAASC,MAHX,kEAMA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAgC1C,GAAhC,uFACkBqC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDnC,EADC,4BACqBkC,IAFvC,cACCI,EADD,yBAKEA,EAASC,KAAKI,MALhB,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgC5C,GAAhC,uFACkBqC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDnC,EADC,4BACqBkC,IAFvC,cACCI,EADD,yBAKEA,EAASC,KAAKC,SALhB,kE","sources":["components/MovieList.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["import { Link, useLocation } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\n\nexport default function MovieList({ movies }) {  \n    const location = useLocation();\n\n    return <ul>{movies.map(movie => <li key={movie.id}><Link to={`/movies/${movie.id}`} state={location}>{movie.title}</Link></li>)}</ul>\n}\n\nMovieList.propTypes = {\n    movies: PropTypes.arrayOf(PropTypes.object),\n}\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  border: none;\n  padding: 12px 20px;\n  outline: none;\n`;\n\nexport const Input = styled.input`\n  border: 1px solid #cfcfcf;\n  padding: 12px 20px;\n  outline: none;\n  border-radius: 4px 0 0 4px;\n`;\n\nexport const Btn = styled.button`\n  border: 1px solid #cfcfcf;\n  padding: 12px 20px;\n  outline: none;\n  border-radius: 0 4px 4px 0;\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n","import MovieList from \"components/MovieList\";\nimport { useEffect } from \"react\";\nimport { Suspense } from \"react\";\nimport { useState } from \"react\"\nimport { useSearchParams } from \"react-router-dom\";\nimport { fetchMovieByQuery } from \"services/api\";\nimport { Btn, Form, Input } from \"./Movies.styled\";\n\nexport default function Movies() {\n    const [inputValue, setInputValue] = useState('');\n    const [movies, setMovies] = useState(null);\n\n    const [searchParams, setSearchParams] = useSearchParams();\n    const movieQuery = searchParams.get(\"query\") ?? \"\";\n\n\n    const updateQueryString = (query) => {\n        const nextParams = query !== \"\" ? { query } : {};\n        setSearchParams(nextParams);\n    };\n\n    const onChange = (e) => {\n        setInputValue(e.target.value);\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        if (!inputValue) {\n            alert(\"Please enter a search query to fing movies\");\n            return;\n        }\n        \n        updateQueryString(inputValue);\n        setInputValue('');    \n    }\n\n    useEffect(() => {\n        const getMoviesByQuery = async () => {\n            try {\n                const movies = await fetchMovieByQuery(movieQuery); \n                setMovies(movies);\n            } catch (error) {\n                console.log(error);\n            }\n        }\n\n        getMoviesByQuery()\n    },[movieQuery])\n\n    return <Suspense fallback={<h1>Loading...</h1>}>\n        <Form onSubmit={onSubmit}>\n            <Input type=\"text\" value={inputValue} onChange={onChange} />\n            <Btn type=\"submit\">search</Btn>\n        </Form>\n        {movies !== null && (movies.length !== 0) && <MovieList movies={movies}></MovieList>}\n    </Suspense>\n}","import axios from 'axios';\n\nconst KEY = '39333c238f3beb7b012a47ab928bbaed';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchTrendingMovies() {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${KEY}`\n  );\n\n  return response.data.results;\n}\n\nexport async function fetchMovieByQuery(query) {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${KEY}&query=${query}`\n  );\n\n  return response.data.results;\n}\n\nexport async function fetchMovieById(id) {\n  const response = await axios.get(`${BASE_URL}movie/${id}?api_key=${KEY}`);\n\n  return response.data;\n}\n\nexport async function fetchCreditsById(id) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${KEY}`\n  );\n\n  return response.data.cast;\n}\n\nexport async function fetchReviewsById(id) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${KEY}`\n  );\n\n  return response.data.results;\n}\n"],"names":["MovieList","movies","location","useLocation","map","movie","to","id","state","title","Form","styled","Input","Btn","Movies","useState","inputValue","setInputValue","setMovies","useSearchParams","searchParams","setSearchParams","movieQuery","get","useEffect","getMoviesByQuery","fetchMovieByQuery","console","log","Suspense","fallback","onSubmit","e","query","preventDefault","alert","type","value","onChange","target","length","KEY","BASE_URL","fetchTrendingMovies","axios","response","data","results","fetchMovieById","fetchCreditsById","cast","fetchReviewsById"],"sourceRoot":""}