{"version":3,"file":"static/js/893.5293676a.chunk.js","mappings":"mPAEaA,EAAUC,EAAAA,GAAAA,IAAH,6IAQPC,EAAMD,EAAAA,GAAAA,IAAH,+CAIHE,EAAOF,EAAAA,GAAAA,IAAH,8C,SCXF,SAASG,EAAT,GAA6B,IAGnBC,EAHUC,EAAQ,EAARA,MACXC,EAA6FD,EAA1GE,YAAyBC,EAAiFH,EAAjFG,MAAqBC,EAA4DJ,EAA1EK,aAA2BC,EAA+CN,EAA/CM,SAAwBC,EAAuBP,EAArCQ,aAA2BC,EAAUT,EAAVS,OAMvG,OAAO,UAACf,EAAD,YACH,SAACE,EAAD,CAAKc,IAAG,8CAAyCT,GAAcU,IAAKR,EAAOS,OAAO,SAClF,UAACf,EAAD,YACI,0BAAKM,EAAL,MAPaJ,EAOaK,EANjB,IAAIS,KAAKd,GACVe,eAKR,QACA,yCAAe,0BAAOP,QACtB,sCACA,uBAAID,KACJ,oCACA,8BAAKG,QAAL,IAAKA,OAAL,EAAKA,EAAQM,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,EAAMC,KAAO,GAAnC,GAAwC,WAGvE,C,2CClBYC,GAAUxB,EAAAA,EAAAA,IAAOyB,EAAAA,GAAPzB,CAAH,6IAUP0B,EAAO1B,EAAAA,GAAAA,IAAH,0CCLF,SAAS2B,IACpB,OAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOvB,EAAP,KAAcwB,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,SAAOC,EAAAA,EAAAA,OAElBC,EAAY,mCAAG,WAAOL,GAAP,0EACZA,EADY,2EAIWM,EAAAA,EAAAA,IAAeN,GAJ1B,OAIPO,EAJO,OAKbR,EAASQ,GALI,gDAObC,QAAQC,IAAR,MAPa,yDAAH,sDAelB,OAJAC,EAAAA,EAAAA,YAAU,WACNL,EAAaL,EAChB,GAAE,CAACA,KAEG,gCACFzB,IAAS,UAACqB,EAAD,YACN,SAACF,EAAD,CAASiB,GAAIT,EAASU,QAAQC,MAA9B,sBACA,SAACxC,EAAD,CAAWE,MAAOA,QAElB,4BACI,oDACA,2BACI,yBAAI,SAAC,KAAD,CAAMoC,GAAE,kBAAaX,EAAb,SAAR,qBACJ,yBAAI,SAAC,KAAD,CAAMW,GAAE,kBAAaX,EAAb,YAAR,8BAGhB,SAAC,EAAAc,SAAD,WAAU,SAAC,KAAD,QAEjB,C,+LCxCKC,EAAM,mCACNC,EAAW,gCAEV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,sCACoBD,IAFtC,cACCI,EADD,yBAKEA,EAASC,KAAKC,SALhB,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,uFACkBL,EAAAA,EAAAA,IAAA,UAClBF,EADkB,gCACcD,EADd,kBAC2BQ,IAF7C,cACCJ,EADD,yBAKEA,EAASC,KAAKC,SALhB,kEAQA,SAAef,EAAtB,+CAAO,OAAP,oBAAO,WAA8BkB,GAA9B,uFACkBN,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA8BQ,EAA9B,oBAA4CT,IAD9D,cACCI,EADD,yBAGEA,EAASC,MAHX,kEAMA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAgCD,GAAhC,uFACkBN,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDQ,EADC,4BACqBT,IAFvC,cACCI,EADD,yBAKEA,EAASC,KAAKM,MALhB,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCH,GAAhC,uFACkBN,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDQ,EADC,4BACqBT,IAFvC,cACCI,EADD,yBAKEA,EAASC,KAAKC,SALhB,kE","sources":["components/MovieInfo/MovieInfo.styled.js","components/MovieInfo/MovieInfo.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Details = styled.div`\n  display: flex;\n  align-items: center;\n  box-shadow: 4px 4px 8px #e8e8e8;\n  margin-top: 24px;\n  padding: 20px;\n`;\n\nexport const Img = styled.img`\n  border-radius: 6px;\n`;\n\nexport const Info = styled.div`\n  margin-left: 24px;\n`;\n","import PropTypes from 'prop-types';\nimport { Details, Info, Img } from \"./MovieInfo.styled\";\n\nexport default function MovieInfo({movie}) {    \n    const {poster_path: posterPath, title, release_date: releaseDate, overview, vote_average: voteAverage, genres} = movie;\n\n    const getFullYear = (dateString) => {\n        const date = new Date(dateString);\n        return date.getFullYear();\n    }\n    return <Details>\n        <Img src={`https://image.tmdb.org/t/p/original/${posterPath}`} alt={title} height='348'/>\n        <Info>\n            <h2>{title} ({getFullYear(releaseDate)})</h2>\n            <p>User Score: <span>{voteAverage}</span></p>\n            <h3>Overview</h3>\n            <p>{overview}</p>\n            <h3>Genres</h3>\n            <p>{ genres?.reduce((acc, genre) => acc + genre.name + ' ', '')}</p>\n        </Info>\n    </Details>\n}\n\nMovieInfo.propTypes = {\n    movie: PropTypes.object.isRequired,\n}","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const BackBtn = styled(Link)`\n  padding: 8px 20px;\n  border-radius: 4px;\n  border: 1px solid #cfcfcf;\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nexport const Wrap = styled.div`\n  padding: 20px;\n`;\n","import MovieInfo from \"components/MovieInfo/MovieInfo\";\nimport { Suspense } from \"react\";\nimport { useRef } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { Link, Outlet, useLocation, useParams } from \"react-router-dom\";\nimport { fetchMovieById } from \"services/api\";\nimport { BackBtn, Wrap } from \"./MovieDetails.styled\";\n\nexport default function MovieDetails() {\n    const [movie, setMovie] = useState(null);\n    const { movieId } = useParams();\n    const location = useRef(useLocation());\n    \n    const getMovieInfo = async (movieId) => {\n        if (!movieId) return;\n        \n        try {\n            const movieInfo = await fetchMovieById(movieId);\n            setMovie(movieInfo);\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    useEffect(() => {\n        getMovieInfo(movieId);\n    }, [movieId])\n\n    return <>\n        {movie && <Wrap>\n            <BackBtn to={location.current.state}>Go Back</BackBtn>\n            <MovieInfo movie={movie} />\n            </Wrap>}\n            <div>\n                <h3>Additional information</h3>\n                <ul>\n                    <li><Link to={`/movies/${movieId}/cast`} >Cast</Link></li>\n                    <li><Link to={`/movies/${movieId}/reviews`}>Reviews</Link></li>\n                </ul>\n            </div>\n        <Suspense><Outlet /></Suspense>\n    </>\n}","import axios from 'axios';\n\nconst KEY = '39333c238f3beb7b012a47ab928bbaed';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchTrendingMovies() {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${KEY}`\n  );\n\n  return response.data.results;\n}\n\nexport async function fetchMovieByQuery(query) {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${KEY}&query=${query}`\n  );\n\n  return response.data.results;\n}\n\nexport async function fetchMovieById(id) {\n  const response = await axios.get(`${BASE_URL}movie/${id}?api_key=${KEY}`);\n\n  return response.data;\n}\n\nexport async function fetchCreditsById(id) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${KEY}`\n  );\n\n  return response.data.cast;\n}\n\nexport async function fetchReviewsById(id) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${KEY}`\n  );\n\n  return response.data.results;\n}\n"],"names":["Details","styled","Img","Info","MovieInfo","dateString","movie","posterPath","poster_path","title","releaseDate","release_date","overview","voteAverage","vote_average","genres","src","alt","height","Date","getFullYear","reduce","acc","genre","name","BackBtn","Link","Wrap","MovieDetails","useState","setMovie","movieId","useParams","location","useRef","useLocation","getMovieInfo","fetchMovieById","movieInfo","console","log","useEffect","to","current","state","Suspense","KEY","BASE_URL","fetchTrendingMovies","axios","response","data","results","fetchMovieByQuery","query","id","fetchCreditsById","cast","fetchReviewsById"],"sourceRoot":""}