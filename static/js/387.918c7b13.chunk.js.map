{"version":3,"file":"static/js/387.918c7b13.chunk.js","mappings":"kRAEaA,EAAWC,EAAAA,GAAAA,GAAH,2IAQRC,EAAeD,EAAAA,GAAAA,GAAH,0OAWZE,EAAOF,EAAAA,GAAAA,EAAH,sEAKJG,EAAQH,EAAAA,GAAAA,IAAH,+DAKLI,EAAYJ,EAAAA,GAAAA,EAAH,sD,SCzBP,SAASK,IACpB,OAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,EAAO,mCAAG,WAAOF,GAAP,0EACPA,EADO,2EAIWG,EAAAA,EAAAA,IAAiBH,GAJ5B,OAIFF,EAJE,OAKRC,EAAQD,GALA,gDAORM,QAAQC,IAAR,MAPQ,yDAAH,sDAeb,OAJAC,EAAAA,EAAAA,YAAU,WACNJ,EAAQF,EACX,GAAE,CAACA,KAEG,SAAC,EAAAO,SAAD,WACH,SAACjB,EAAD,iBACKQ,QADL,IACKA,OADL,EACKA,EAAMU,KAAI,SAAAC,GACP,IAAOC,EAAmDD,EAAnDC,UAAWC,EAAwCF,EAAxCE,KAAoBC,EAAoBH,EAAlCI,aAA2BC,EAAOL,EAAPK,GACnD,OAAO,UAACtB,EAAD,YACH,SAACE,EAAD,CAAOqB,IAAG,0CAAqCH,GAAeI,IAAKL,EAAMM,MAAM,SAC/E,4BACI,SAACxB,EAAD,UAAOkB,KACP,SAAChB,EAAD,UAAae,SAJKI,EAO7B,OAIZ,C,+LCvCKI,EAAM,mCACNC,EAAW,gCAEV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,sCACoBD,IAFtC,cACCI,EADD,yBAKEA,EAASC,KAAKC,SALhB,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,uFACkBL,EAAAA,EAAAA,IAAA,UAClBF,EADkB,gCACcD,EADd,kBAC2BQ,IAF7C,cACCJ,EADD,yBAKEA,EAASC,KAAKC,SALhB,kEAQA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA8Bb,GAA9B,uFACkBO,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA8BL,EAA9B,oBAA4CI,IAD9D,cACCI,EADD,yBAGEA,EAASC,MAHX,kEAMA,SAAepB,EAAtB,+CAAO,OAAP,oBAAO,WAAgCW,GAAhC,uFACkBO,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDL,EADC,4BACqBI,IAFvC,cACCI,EADD,yBAKEA,EAASC,KAAKzB,MALhB,kEAQA,SAAe8B,EAAtB,+CAAO,OAAP,oBAAO,WAAgCd,GAAhC,uFACkBO,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDL,EADC,4BACqBI,IAFvC,cACCI,EADD,yBAKEA,EAASC,KAAKC,SALhB,kE","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  padding: 0;\n  list-style: none;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr;\n  gap: 12px;\n`;\n\nexport const CastListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  padding: 8px;\n  border: 1px solid #e8e8e8;\n  box-shadow: 0px 0px 8px #e8e8e8;\n  border-radius: 8px;\n`;\n\nexport const Name = styled.p`\n  margin: 12px 0 4px 0;\n  font-weight: 700;\n`;\n\nexport const Photo = styled.img`\n  width: 100%;\n  border-radius: 4px;\n`;\n\nexport const Character = styled.p`\n  margin: 0;\n  color: grey;\n`;\n","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchCreditsById } from \"services/api\";\nimport { CastList, CastListItem, Character, Name, Photo } from \"./Cast.styled\";\nimport { Suspense } from \"react\";\n\nexport default function Cast() {\n    const [cast, setCast] = useState(null);\n\n    const { movieId } = useParams();\n\n    const getCast = async (movieId) => {\n        if (!movieId) return;\n        \n        try {\n            const cast = await fetchCreditsById(movieId);\n            setCast(cast);\n        } catch (error) {\n            console.log(error)\n        }\n    }  \n\n    useEffect(() => {\n        getCast(movieId)\n    }, [movieId])\n\n    return <Suspense>\n        <CastList>\n            {cast?.map(actor => {\n                const {character, name, profile_path: profilePath, id } = actor;\n                return <CastListItem key={id}>\n                    <Photo src={`https://image.tmdb.org/t/p/w500/${profilePath}`} alt={name} width=\"120\"/>\n                    <div>\n                        <Name>{name}</Name>\n                        <Character>{ character}</Character>\n                    </div>\n                </CastListItem>\n            })\n            }\n        </CastList>\n    </Suspense>\n}","import axios from 'axios';\n\nconst KEY = '39333c238f3beb7b012a47ab928bbaed';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchTrendingMovies() {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${KEY}`\n  );\n\n  return response.data.results;\n}\n\nexport async function fetchMovieByQuery(query) {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${KEY}&query=${query}`\n  );\n\n  return response.data.results;\n}\n\nexport async function fetchMovieById(id) {\n  const response = await axios.get(`${BASE_URL}movie/${id}?api_key=${KEY}`);\n\n  return response.data;\n}\n\nexport async function fetchCreditsById(id) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${KEY}`\n  );\n\n  return response.data.cast;\n}\n\nexport async function fetchReviewsById(id) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${KEY}`\n  );\n\n  return response.data.results;\n}\n"],"names":["CastList","styled","CastListItem","Name","Photo","Character","Cast","useState","cast","setCast","movieId","useParams","getCast","fetchCreditsById","console","log","useEffect","Suspense","map","actor","character","name","profilePath","profile_path","id","src","alt","width","KEY","BASE_URL","fetchTrendingMovies","axios","response","data","results","fetchMovieByQuery","query","fetchMovieById","fetchReviewsById"],"sourceRoot":""}